{
    "advantages": [
        "Simple to understand and implement, making it great for educational purposes.",
        "Efficient for small datasets and nearly sorted data, with a best-case time complexity of O(n).",
        "Stable sorting algorithm: maintains the relative order of equal elements.",
        "In-place sorting algorithm: requires minimal additional memory.",
        "Adaptive: the performance improves for partially sorted arrays."
    ],
    "disadvantages": [
        "Inefficient for large datasets with a time complexity of O(n^2) in average and worst cases.",
        "Requires more comparisons and shifts for larger or random data.",
        "Not suitable for large lists, especially when more efficient algorithms like quicksort or mergesort are available."
    ]
}
